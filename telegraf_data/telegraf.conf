[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "telegraf-1"
  omit_hostname = false
  debug = true
  quiet = false

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token="${INFLUX_TOKEN}"
  #token = "qg1T9NFElGtFRjDPaBAw-KQ_ngc01Rm2H7GBnu67Xjh5m1XlXq8KmUuwxF7R_We05D6BzWhsiAd4BuqyrcGFUg=="
  organization = "formation"
  bucket = "IoTLoRa"
  
[[inputs.mqtt_consumer]]
servers = ["tcp://eu1.cloud.thethings.network:1883"]
topics = ["v3/stm32wl-serv17@ttn/devices/+/up",]
# topic_tag = ""
username = "stm32wl-serv17@ttn"
qos = 0
password = "NNSXS.A6TCCHAGAYKCFPMXUEFPL77S4YEAP5GHEPWDSUQ.DWOZP226BGFICHNEG2UEX7IV3NUI6TBNP6KIIJGSN75WTC2IYOAQ"
data_format = "json"
  
#[[inputs.mqtt_consumer]]
#  ## Broker URLs for the MQTT server or cluster.  To connect to multiple
#  ## clusters or standalone servers, use a separate plugin instance.
#  ##   example: servers = ["tcp://localhost:1883"]
#  ##            servers = ["ssl://localhost:1883"]
#  ##            servers = ["ws://localhost:1883"]
#  servers = ["tcp://eu1.cloud.thethings.network:1883"]
#  ## Topics that will be subscribed to.
#  topics = ["v3/energy-efficiency-usmb@ttn/devices/+/up"]
#  # topic_fields = "_/_/_/temperature"
#  ## The message topic will be stored in a tag specified by this value.  If set
#  ## to the empty string no topic tag will be created.
#  topic_tag = ""
#  ## QoS policy for messages
#  ##   0 = at most once
#  ##   1 = at least once
#  ##   2 = exactly once
#  ##
#  ## When using a QoS of 1 or 2, you should enable persistent_session to allow
#  ## resuming unacknowledged messages.
#  # qos = 0
#  ## Connection timeout for initial connection in seconds
#  # connection_timeout = "30s"
#  ## Maximum messages to read from the broker that have not been written by an
#  ## output.  For best throughput set based on the number of metrics within
#  ## each message and the size of the output's metric_batch_size.
#  ##
#  ## For example, if each message from the queue contains 10 metrics and the
#  ## output metric_batch_size is 1000, setting this to 100 will ensure that a
#  ## full batch is collected and the write is triggered immediately without
#  ## waiting until the next flush_interval.
#  # max_undelivered_messages = 1000
#  ## Persistent session disables clearing of the client session on connection.
#  ## In order for this option to work you must also set client_id to identify
#  ## the client.  To receive messages that arrived while the client is offline,
#  ## also set the qos option to 1 or 2 and don't forget to also set the QoS when
#  ## publishing.
#  # persistent_session = false
#  ## If unset, a random client ID will be generated.
#  # client_id = ""
#  ## Username and password to connect MQTT server.
#username = "energy-efficiency-usmb@ttn"
#password = "NNSXS.OAVL4JM34NO6GAQNNWMXA47T5BW5XUP3P7SYLRI.DOKI6EMQ44C5M4CMV2AA2ZZRWTI25EI6BMEJRU7K5HE2UGMGGO5Q"
#  ## Optional TLS Config
#  # tls_ca = "/etc/telegraf/ca.pem"
#  # tls_cert = "/etc/telegraf/cert.pem"
#  # tls_key = "/etc/telegraf/key.pem"
#  ## Use TLS but skip chain & host verification
#  # insecure_skip_verify = false
#  ## Data format to consume.
#  ## Each data format has its own unique set of configuration options, read
#  ## more about them here:
#  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
#data_format = "json"
#  ## Enable extracting tag values from MQTT topics
#  ## _ denotes an ignored entry in the topic path
#  ## [[inputs.mqtt_consumer.topic_parsing]]
#  ##  topic = ""
#  ##  measurement = ""
#  ##  tags = ""
#  ##  fields = ""
#  ## [inputs.mqtt_consumer.topic_parsing.types]
#  ##  tags = ""
#  [[inputs.mqtt_consumer.topic_parsing]]
#     topic = "v3/energy-efficiency-usmb@ttn/devices/+/up"  # all topics with 5 segments
#     tags = "_/_/_/device_id/_"

  


